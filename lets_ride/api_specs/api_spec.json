{
    "swagger": "2.0",
    "host": "localhost:8080",
    "basePath": "/api/lets_ride/",
    "info": {
        "version": "1.0.0",
        "title": "Let's Ride",
        "description": "API's for Let's Ride"
    },
    "schemes": [
        "https",
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "oauth": {
            "tokenUrl": "http://auth.ibtspl.com/oauth2/",
            "flow": "password",
            "scopes": {
                "read": "read users",
                "write": "create users",
                "update": "update users",
                "delete": "delete users",
                "superuser": "super user permission"
            },
            "type": "oauth2"
        }
    },
    "definitions": {
        "CommonRequest": {
            "type": "object",
            "properties": {
                "source": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "travel_date_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "flexible_timings": {
                    "type": "boolean"
                },
                "flexible_from_date_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "flexible_to_date_time": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "required": [
                "source",
                "destination",
                "flexible_timings"
            ]
        },
        "AssetQuantity": {
            "type": "object",
            "properties": {
                "asset_quantity": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "asset_quantity"
            ]
        },
        "RideRequest": {
            "allOf": [{
                    "$ref": "#/definitions/CommonRequest"
                },
                {
                    "type": "object",
                    "properties": {
                        "seats": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "laguage_quantity": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "required": [
                        "seats",
                        "laguage_quantity"
                    ]
                }
            ]
        },
        "AssetRequest": {
            "allOf": [{
                    "$ref": "#/definitions/CommonRequest"
                },
                {
                    "$ref": "#/definitions/AssetQuantity"
                },
                {
                    "type": "object",
                    "properties": {
                        "asset_type": {
                            "type": "string",
                            "enum": [
                                "BAG",
                                "LAPTOP",
                                "DOCUMENTS",
                                "OTHERS"
                            ]
                        },
                        "asset_type_others": {
                            "type": "string"
                        },
                        "asset_sensitivity": {
                            "type": "string",
                            "enum": [
                                "LOW",
                                "HIGH",
                                "MEDIUM"
                            ]
                        },
                        "deliver_to": {
                            "type": "string"
                        },
                        "phone_number": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "asset_type",
                        "asset_sensitivity",
                        "deliver_to",
                        "phone_number"
                    ]
                }
            ]
        },
        "ShareTravelInfo": {
            "allOf": [{
                    "$ref": "#/definitions/CommonRequest"
                },
                {
                    "type": "object",
                    "properties": {
                        "travel_medium": {
                            "type": "string",
                            "enum": [
                                "BUS",
                                "TRAIN",
                                "FLIGHT"
                            ]
                        }
                    },
                    "required": [
                        "travel_medium"
                    ]
                },
                {
                    "$ref": "#/definitions/AssetQuantity"
                }
            ]
        },
        "ShareTravelInfoDisplayDetails": {
            "allOf": [{
                    "$ref": "#/definitions/ShareTravelInfo"
                },
                {
                    "type": "object",
                    "properties": {
                        "travel_share_id": {
                            "type": "integer"
                        },
                        "accepted_asset_quantity": {
                            "type": "integer"
                        },
                        "status": {
                            "type": "string",
                            "enum": [
                                "ACTIVE",
                                "EXPIRED"
                            ]
                        }
                    },
                    "required": [
                        "accepted_asset_quantity",
                        "status"
                    ]
                }
            ]
        },
        "ShareRide": {
            "allOf": [{
                    "$ref": "#/definitions/CommonRequest"
                },
                {
                    "type": "object",
                    "properties": {
                        "seats": {
                            "type": "integer"
                        }
                    },
                    "required": [
                        "seats"
                    ]
                },
                {
                    "$ref": "#/definitions/AssetQuantity"
                }
            ]
        },
        "ShareRideDisplayDetails": {
            "allOf": [{
                    "$ref": "#/definitions/ShareRide"
                },
                {
                    "type": "object",
                    "properties": {
                        "ride_share_id": {
                            "type": "integer"
                        },
                        "accepted_seats": {
                            "type": "integer"
                        },
                        "accepted_asset_quantity": {
                            "type": "integer"
                        },
                        "status": {
                            "type": "string",
                            "enum": [
                                "ACTIVE",
                                "EXPIRED"
                            ]

                        }
                    },
                    "required": [
                        "accepted_seats",
                        "accepted_asset_quantity",
                        "status"
                    ]
                }
            ]
        },
        "BaseRequestDisplayDetails": {
            "type": "object",
            "properties": {
                "accepted_person": {
                    "type": "string"
                },
                "accepted_person_phone_number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "status"
            ]
        },
        "RideRequestDisplayDetails": {
            "allOf": [{
                    "type": "object",
                    "properties": {
                        "ride_request_id": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "required": [
                        "ride_request_id"
                    ]
                },
                {
                    "$ref": "#/definitions/RideRequest"
                },
                {
                    "$ref": "#/definitions/BaseRequestDisplayDetails"
                }
            ]
        },
        "AssetRequestDisplayDetails": {
            "allOf": [{
                    "type": "object",
                    "properties": {
                        "asset_request_id": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "required": [
                        "asset_request_id"
                    ]
                },
                {
                    "$ref": "#/definitions/AssetRequest"
                },
                {
                    "$ref": "#/definitions/BaseRequestDisplayDetails"
                }
            ]
        },
        "RideMatchingDetails": {
            "type": "object",
            "properties": {
                "ride_request_id": {
                    "type": "integer"
                },
                "ride_matching_id": {
                    "type": "integer"
                },
                "source": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "travel_date_time": {
                    "type": "string"
                },
                "flexible_timings": {
                    "type": "boolean"
                },
                "flexible_from_date_time": {
                    "type": "string"
                },
                "flexible_to_date_time": {
                    "type": "string"
                },
                "seats": {
                    "type": "integer",
                    "format": "int64"
                },
                "laguage_quantity": {
                    "type": "integer",
                    "format": "int64"
                },
                "username": {
                    "type": "string"
                },
                "user_phone_number": {
                    "type": "string"
                }
            },
            "required": [
                "ride_request_id",
                "seats",
                "laguage_quantity",
                "username",
                "user_phone_number",
                "source",
                "destination",
                "flexible_timings",
                "ride_matching_id"
            ]
        },
        "AssetMatchingDetails": {
            "allOf": [{
                    "type": "object",
                    "properties": {
                        "asset_request_id": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "travel_matching_id": {
                            "type": "integer"
                        },
                        "ride_matching_id": {
                            "type": "integer"
                        },
                        "username": {
                            "type": "string"
                        },
                        "user_phone_number": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "asset_request_id",
                        "username",
                        "user_phone_number"
                    ]
                },
                {
                    "$ref": "#/definitions/AssetRequest"
                }
            ]
        },
        "RideAssetMatchingDisplayDetails": {
            "type": "object",
            "properties": {
                "rides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RideMatchingDetails"
                    }
                },
                "total_rides": {
                    "type": "integer",
                    "format": "int64"
                },
                "assets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetMatchingDetails"
                    }
                },
                "total_assets": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "required": [
                "rides",
                "total_rides",
                "assets",
                "total_assets"
            ]
        }
    },
    "parameters": {
        "UserRideRequest": {
            "name": "ride_request",
            "description": "To create ride request for user",
            "in": "body",
            "schema": {
                "$ref": "#/definitions/RideRequest"
            }
        },
        "UserAssetRequest": {
            "name": "asset_request",
            "description": "To create asset request for user",
            "in": "body",
            "schema": {
                "$ref": "#/definitions/AssetRequest"
            }
        },
        "ShareTravelInfoRequest": {
            "name": "share_travel_info",
            "description": "To create travel_info request for user",
            "in": "body",
            "schema": {
                "$ref": "#/definitions/ShareTravelInfo"
            }
        },
        "ShareRideRequest": {
            "name": "share_ride",
            "description": "To create share_ride  request for user",
            "in": "body",
            "schema": {
                "$ref": "#/definitions/ShareRide"
            }
        },
        "RideRequestAcceptId": {
            "name": "ride_request_id",
            "description": "To accept ride_request",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "ride_request_id": {
                        "type": "integer"
                    },
                    "ride_matching_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "ride_request_id",
                    "ride_matching_id"
                ]
            }
        },
        "AssetRequestAcceptId": {
            "name": "ride_request_id",
            "description": "To accept asset_request",
            "in": "body",
            "schema": {
                "type": "object",
                "properties": {
                    "asset_request_id": {
                        "type": "integer"
                    },
                    "travel_matching_id": {
                        "type": "integer"
                    },
                    "ride_matching_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "asset_request_id",
                    "travel_matching_id",
                    "ride_matching_id"
                ]
            }
        }
    },
    "responses": {
        "RideAssetRequestMatchingDetailsResponse": {
            "description": "Success",
            "schema": {
                "$ref": "#/definitions/RideAssetMatchingDisplayDetails"
            }
        },
        "RideRequestDisplayDetailsListResponse": {
            "description": "Success",
            "schema": {
                "type": "object",
                "properties": {
                    "rides": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/RideRequestDisplayDetails"
                        }
                    },
                    "total_rides": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "required": [
                    "rides",
                    "total_rides"
                ]
            }
        },
        "AssetRequestDisplayDetailsListResponse": {
            "description": "Success",
            "schema": {
                "type": "object",
                "properties": {
                    "assets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/AssetRequestDisplayDetails"
                        }
                    },
                    "total_assets": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "filter_options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sort_options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "assets",
                    "total_assets",
                    "filter_options",
                    "sort_options"
                ]
            }
        },
        "ShareRideDisplayDetailsResponse": {
            "description": "Success",
            "schema": {
                "type": "object",
                "properties": {
                    "ride_shares": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/ShareRideDisplayDetails"
                        }
                    },
                    "total_ride_shares": {
                        "type": "integer"
                    }
                }
            }
        },
        "ShareTravelInfoDisplayDetailsResponse": {
            "description": "Success",
            "schema": {
                "type": "object",
                "properties": {
                    "travel_info_shares": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/ShareTravelInfoDisplayDetails"
                        }
                    },
                    "total_travel_info_shares": {
                        "type": "integer"
                    }
                }
            }
        },
        "CreateRideRequestFailureRespose": {
            "description": "create ride request failure response",
            "schema": {
                "type": "object",
                "properties": {
                    "response": {
                        "type": "string"
                    },
                    "http_status_code": {
                        "type": "integer"
                    },
                    "res_status": {
                        "type": "string",
                        "enum": [
                            "INVALID_DATE_TIME",
                            "NEGATIVE_VALUES_NOT_ALLOWED"
                        ]
                    }
                }
            }
        }


    },
    "paths": {
        "/ride_request/v1/": {
            "post": {
                "operationId": "ride_request",
                "summary": "create ride request for user",
                "description": "creating ride request for user. This api is not idempotent.",
                "security": [{
                    "oauth": [
                        "write",
                        "read"
                    ]
                }],
                "parameters": [{
                    "$ref": "#/parameters/UserRideRequest"
                }],
                "responses": {
                    "201": {
                        "description": "successfully created ride request"
                    },
                    "400": {
                        "$ref": "#/responses/CreateRideRequestFailureRespose"
                    }
                }
            }
        },
        "/asset_request/v1/": {
            "post": {
                "operationId": "asset_request",
                "summary": "create asset request for user",
                "description": "creating asset request for user. This api is not idempotent.",
                "security": [{
                    "oauth": [
                        "write",
                        "read"
                    ]
                }],
                "parameters": [{
                    "$ref": "#/parameters/UserAssetRequest"
                }],
                "responses": {
                    "201": {
                        "description": "successfully created asset request"
                    }
                }
            }
        },
        "/share_travel_info/v1/": {
            "post": {
                "operationId": "share_travel_info",
                "summary": "create asset request for user",
                "description": "creating asset request for user. This api is not idempotent.",
                "security": [{
                    "oauth": [
                        "write",
                        "read"
                    ]
                }],
                "parameters": [{
                    "$ref": "#/parameters/ShareTravelInfoRequest"
                }],
                "responses": {
                    "201": {
                        "description": "successfully created asset request"
                    }
                }
            }
        },
        "/share_ride/v1/": {
            "post": {
                "operationId": "share_ride",
                "summary": "create share_ride  for user",
                "description": "creating share_ride request for user. This api is not idempotent.",
                "security": [{
                    "oauth": [
                        "write",
                        "read"
                    ]
                }],
                "parameters": [{
                        "$ref": "#/parameters/ShareRideRequest"
                    }

                ],
                "responses": {
                    "201": {
                        "description": "successfully created share_ride request"
                    }
                }
            }
        },
        "/my_requests/rides/v1/": {
            "get": {
                "operationId": "my_ride_requests",
                "summary": "user ride request",
                "description": "user ride details. This api is not idempotent.",
                "security": [{
                    "oauth": [
                        "write",
                        "read"
                    ]
                }],
                "parameters": [{
                        "name": "offset",
                        "in": "query",
                        "description": "offset value where to start",
                        "type": "integer",
                        "default": 1,
                        "minimum": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit value where to stop",
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    {
                        "name": "filter_by",
                        "in": "query",
                        "description": "filter based on which field",
                        "type": "string",
                        "enum": [
                            "STATUS"
                        ]
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "value to perform filter",
                        "type": "string",
                        "enum": [
                            "ACCEPTED",
                            "EXPIRED",
                            "PENDING"
                        ]
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "sort_by",
                        "type": "string",
                        "enum": [
                            "SEATS",
                            "TRVEL_DATETIME"
                        ],
                        "default": "SEATS"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "sort_value",
                        "type": "string",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "default": "ASC"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/RideRequestDisplayDetailsListResponse"
                    }
                }
            }
        },
        "/my_requests/assets/v1/": {
            "get": {
                "operationId": "my_asset_requests",
                "summary": "user asset request",
                "description": "user asset details. This api is not idempotent.",
                "security": [{
                    "oauth": [
                        "write",
                        "read"
                    ]
                }],
                "parameters": [{
                        "name": "offset",
                        "in": "query",
                        "description": "offset value where to start",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit value where to stop",
                        "type": "integer",
                        "default": 5
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status to filter",
                        "type": "string"
                    },
                    {
                        "name": "sort_key",
                        "in": "query",
                        "description": "sort_by",
                        "type": "string",
                        "default": "asset_quantity"
                    },
                    {
                        "name": "sort_value",
                        "in": "query",
                        "description": "sort_value",
                        "type": "string",
                        "default": "ASC"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/AssetRequestDisplayDetailsListResponse"
                    }
                }
            }
        },
        "/matching_results/v1/": {
            "get": {
                "operationId": "matching_results",
                "summary": "user ride and asset matching reaults",
                "description": "user ride and asset matching details. This api is not idempotent.",
                "security": [{
                    "oauth": [
                        "write",
                        "read"
                    ]
                }],
                "parameters": [{
                        "name": "offset",
                        "in": "query",
                        "description": "offset value where to start",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit value where to stop",
                        "type": "integer",
                        "default": 5
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/RideAssetRequestMatchingDetailsResponse"
                    }
                }
            }
        },
        "/accept_ride_request/v1/": {
            "put": {
                "operationId": "accept_ride_request",
                "summary": "to accept ride request",
                "description": "user accepts the ride request. This api is not idempotent.",
                "security": [{
                    "oauth": [
                        "write",
                        "read"
                    ]
                }],
                "parameters": [{
                    "$ref": "#/parameters/RideRequestAcceptId"
                }],
                "responses": {
                    "200": {
                        "description": "successfully accepted ride_request"
                    }
                }

            }
        },
        "/accept_asset_request/v1/": {
            "put": {
                "operationId": "accept_asset_request",
                "summary": "to accept asset request",
                "description": "user accepts the asset request. This api is not idempotent.",
                "security": [{
                    "oauth": [
                        "write",
                        "read"
                    ]
                }],
                "parameters": [{
                    "$ref": "#/parameters/AssetRequestAcceptId"
                }],
                "responses": {
                    "200": {
                        "description": "successfully accepted asset_request"
                    }
                }

            }
        },
        "/ride_shares/v1/": {
            "get": {
                "operationId": "my_ride_shares",
                "summary": "user ride shares",
                "description": "user ride share details. This api is not idempotent.",
                "security": [{
                    "oauth": [
                        "write",
                        "read"
                    ]
                }],
                "parameters": [{
                        "name": "offset",
                        "in": "query",
                        "description": "offset value where to start",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit value where to stop",
                        "type": "integer",
                        "default": 5
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/ShareRideDisplayDetailsResponse"
                    }
                }
            }
        },
        "/travel_info_shares/v1/": {
            "get": {
                "operationId": "my_travel_shares",
                "summary": "user travel shares",
                "description": "user travel share details. This api is not idempotent.",
                "security": [{
                    "oauth": [
                        "write",
                        "read"
                    ]
                }],
                "parameters": [{
                        "name": "offset",
                        "in": "query",
                        "description": "offset value where to start",
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit value where to stop",
                        "type": "integer",
                        "default": 5
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/ShareTravelInfoDisplayDetailsResponse"
                    }
                }
            }
        }
    }
}
