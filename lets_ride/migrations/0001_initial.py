# Generated by Django 3.0.5 on 2020-06-26 22:06

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import lets_ride.models.ride_request


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=30, unique=True)),
                ('profile_pic', models.TextField(default='https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/05bab6ee-6f73-4e37-b727-179336e41690.svg')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TravelInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=50)),
                ('destination', models.CharField(max_length=50)),
                ('travel_date_time', models.DateTimeField(blank=True, null=True)),
                ('flexible_timings', models.BooleanField(default=False)),
                ('flexible_from_date_time', models.DateTimeField(blank=True, null=True)),
                ('flexible_to_date_time', models.DateTimeField(blank=True, null=True)),
                ('travel_medium', models.CharField(choices=[('BUS', 'BUS'), ('TRAIN', 'TRAIN'), ('FLIGHT', 'FLIGHT')], max_length=50)),
                ('asset_quantity', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='travel_info', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ShareRide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=50)),
                ('destination', models.CharField(max_length=50)),
                ('travel_date_time', models.DateTimeField(blank=True, null=True)),
                ('flexible_timings', models.BooleanField(default=False)),
                ('flexible_from_date_time', models.DateTimeField(blank=True, null=True)),
                ('flexible_to_date_time', models.DateTimeField(blank=True, null=True)),
                ('seats', models.IntegerField()),
                ('asset_quantity', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='share_rides', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RideRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=50)),
                ('destination', models.CharField(max_length=50)),
                ('travel_date_time', models.DateTimeField(blank=True, null=True)),
                ('flexible_timings', models.BooleanField(default=False)),
                ('flexible_from_date_time', models.DateTimeField(blank=True, null=True)),
                ('flexible_to_date_time', models.DateTimeField(blank=True, null=True)),
                ('seats', models.IntegerField(validators=[lets_ride.models.ride_request.validate_seats])),
                ('laguage_quantity', models.IntegerField()),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rides_accepted', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ride_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AssetRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=100)),
                ('destination', models.CharField(max_length=100)),
                ('travel_date_time', models.DateTimeField(blank=True, null=True)),
                ('flexible_timings', models.BooleanField(default=False)),
                ('flexible_from_date_time', models.DateTimeField(blank=True, null=True)),
                ('flexible_to_date_time', models.DateTimeField(blank=True, null=True)),
                ('asset_quantity', models.IntegerField()),
                ('asset_type', models.CharField(choices=[('BAG', 'BAG'), ('LAPTOP', 'LAPTOP'), ('DOCUMENTS', 'DOCUMENTS'), ('OTHERS', 'OTHERS')], max_length=50)),
                ('asset_type_others', models.CharField(blank=True, max_length=100, null=True)),
                ('asset_sensitivity', models.CharField(choices=[('LOW', 'LOW'), ('HIGH', 'HIGH'), ('MEDIUM', 'MEDIUM')], max_length=50)),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assets_accepted', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
